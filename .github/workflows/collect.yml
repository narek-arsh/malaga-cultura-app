name: Collect cultural events

on:
  schedule:
    # 04:00 UTC â‰ˆ 06:00 Europe/Madrid (verano). Ajusta si quieres.
    - cron: '0 4 * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: collect
  cancel-in-progress: true

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ðŸ”¹ 1) Sincroniza ANTES de generar nada (working tree limpio)
      - name: Sync branch (pre-collect)
        run: |
          set -e
          BRANCH="${GITHUB_REF_NAME:-main}"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin "$BRANCH"
          git pull --rebase --autostash origin "$BRANCH"

      - name: Run collector
        env:
          PYTHONPATH: .
        run: |
          python -m scripts.collect

      # ðŸ”¹ 2) Commitea primero; asÃ­ el rebase no falla por "unstaged changes"
      - name: Commit & push changes
        run: |
          set -e
          BRANCH="${GITHUB_REF_NAME:-main}"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add data/events.json data/meta.json || true

          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "chore: update events.json [skip ci]"

          # Rebase por si hubo pushes durante la ejecuciÃ³n
          git fetch origin "$BRANCH"
          git pull --rebase --autostash origin "$BRANCH"

          git push origin HEAD:"$BRANCH"
